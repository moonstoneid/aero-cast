package com.moonstoneid.aerocast.common.eth.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class FeedRegistry extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5061003260405180606001604052806027815260200161241860279139610037565b6100f1565b61007e8160405160240161004b91906100a3565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b1790915261008116565b50565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b600060208083528351808285015260005b818110156100d0578581018301518582016040015282016100b4565b506000604082860101526040601f19601f8301168501019250505092915050565b612318806101006000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a4e52bd51161005b578063a4e52bd5146100ef578063c2daf4bc146100f7578063e38bdd19146100ff578063f6d4d0eb1461010757600080fd5b806343fe3e16146100825780637eee4fb9146100c75780637fffcce5146100dc575b600080fd5b6100ab61009036600461049d565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100da6100d53660046104e3565b610130565b005b6100ab6100ea36600461049d565b61026e565b6100ab6102b5565b6100da6102fb565b6100ab6103da565b6100ab61011536600461049d565b6001602052600090815260409020546001600160a01b031681565b600060405161013e90610483565b604051809103906000f08015801561015a573d6000803e3d6000fd5b50604051630212d0e760e61b81529091506001600160a01b038216906384b439c09061018a9085906004016105da565b600060405180830381600087803b1580156101a457600080fd5b505af11580156101b8573d6000803e3d6000fd5b50506040516313af403560e01b81523360048201526001600160a01b03841692506313af40359150602401600060405180830381600087803b1580156101fd57600080fd5b505af1158015610211573d6000803e3d6000fd5b50505050600081905061023d60405180606001604052806029815260200161226f602991393383610415565b33600090815260208190526040902080546001600160a01b0319166001600160a01b03929092169190911790555050565b6001600160a01b038082166000908152600160209081526040808320548151606081019092526026808352939416926102af92612298908301393383610415565b92915050565b3360009081526001602090815260408083205481516060810190925260268083526001600160a01b03909116926102f6929190612298908301393383610415565b919050565b600060405161030990610490565b604051809103906000f080158015610325573d6000803e3d6000fd5b506040516313af403560e01b81523360048201529091506001600160a01b038216906313af403590602401600060405180830381600087803b15801561036a57600080fd5b505af115801561037e573d6000803e3d6000fd5b5050505060008190506103aa6040518060600160405280602a8152602001612245602a91393383610415565b33600090815260016020526040902080546001600160a01b0319166001600160a01b039290921691909117905550565b336000908152602081815260408083205481516060810190925260258083526001600160a01b03909116926102f69291906122be9083013933835b61045c83838360405160240161042d939291906105ed565b60408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b179052610461565b505050565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b610ba88061062183390190565b61107c806111c983390190565b6000602082840312156104af57600080fd5b81356001600160a01b03811681146104c657600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104f557600080fd5b813567ffffffffffffffff8082111561050d57600080fd5b818401915084601f83011261052157600080fd5b813581811115610533576105336104cd565b604051601f8201601f19908116603f0116810190838211818310171561055b5761055b6104cd565b8160405282815287602084870101111561057457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156105ba5760208185018101518683018201520161059e565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104c66020830184610594565b6060815260006106006060830186610594565b6001600160a01b039485166020840152929093166040909101529291505056fe608060405234801561001057600080fd5b50600080546001600160a01b03191633179055604080516060810190915260288082526100459190610b80602083013961004a565b610104565b6100918160405160240161005e91906100b6565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b1790915261009416565b50565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b600060208083528351808285015260005b818110156100e3578581018301518582016040015282016100c7565b506000604082860101526040601f19601f8301168501019250505092915050565b610a6d806101136000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b7636a11161005b5780637b7636a1146100c05780637c83510f146100e057806384b439c0146100f55780638da5cb5b1461010857600080fd5b806313af4035146100825780631c4bdaa314610097578063243e280b146100ad575b600080fd5b61009561009036600461064b565b610123565b005b6002546040519081526020015b60405180910390f35b6100956100bb366004610691565b610178565b6100d36100ce366004610742565b6102aa565b6040516100a491906107a1565b6100e86103f8565b6040516100a491906107d8565b610095610103366004610691565b61048a565b6000546040516001600160a01b0390911681526020016100a4565b6000546001600160a01b031633146101565760405162461bcd60e51b815260040161014d906107eb565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101a25760405162461bcd60e51b815260040161014d906107eb565b600280546040805160608101825282815242602082019081529181018581526001840185556000949094528051600384027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810191825592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015593519293909290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0019061025490826108bb565b50505061027b604051806060016040528060228152602001610a166022913933838561058e565b60405181907f6dda240fc875f1ee65b95abd125377f81bf199395a55b7f2ef46c713cae8c29890600090a25050565b6102ce60405180606001604052806000815260200160008152602001606081525090565b600254821061031f5760405162461bcd60e51b815260206004820152601860248201527f507562206974656d20646f6573206e6f74206578697374210000000000000000604482015260640161014d565b600282815481106103325761033261097b565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461036f90610833565b80601f016020809104026020016040519081016040528092919081815260200182805461039b90610833565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b5050505050815250509050919050565b60606001805461040790610833565b80601f016020809104026020016040519081016040528092919081815260200182805461043390610833565b80156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b5050505050905090565b6000546001600160a01b031633146104b45760405162461bcd60e51b815260040161014d906107eb565b60016104c082826108bb565b5061058b6040518060400160405280601d81526020017f4163636f756e742025732073657420666565642055524c3a2027257327000000815250336001805461050890610833565b80601f016020809104026020016040519081016040528092919081815260200182805461053490610833565b80156105815780601f1061055657610100808354040283529160200191610581565b820191906000526020600020905b81548152906001019060200180831161056457829003601f168201915b50505050506105dd565b50565b6105d7848484846040516024016105a89493929190610991565b60408051601f198184030181529190526020810180516001600160e01b0316632d23bb1960e11b179052610629565b50505050565b6106248383836040516024016105f5939291906109d7565b60408051601f198184030181529190526020810180516001600160e01b031663e0e9ad4f60e01b179052610629565b505050565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b60006020828403121561065d57600080fd5b81356001600160a01b038116811461067457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156106a357600080fd5b813567ffffffffffffffff808211156106bb57600080fd5b818401915084601f8301126106cf57600080fd5b8135818111156106e1576106e161067b565b604051601f8201601f19908116603f011681019083821181831017156107095761070961067b565b8160405282815287602084870101111561072257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561075457600080fd5b5035919050565b6000815180845260005b8181101561078157602081850181015186830182015201610765565b506000602082860101526020601f19601f83011685010191505092915050565b602081528151602082015260208201516040820152600060408301516060808401526107d0608084018261075b565b949350505050565b602081526000610674602083018461075b565b60208082526028908201527f43616c6c6572206f66207468652066756e6374696f6e206973206e6f7420746860408201526765206f776e65722160c01b606082015260800190565b600181811c9082168061084757607f821691505b60208210810361086757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561062457600081815260208120601f850160051c810160208610156108945750805b601f850160051c820191505b818110156108b3578281556001016108a0565b505050505050565b815167ffffffffffffffff8111156108d5576108d561067b565b6108e9816108e38454610833565b8461086d565b602080601f83116001811461091e57600084156109065750858301515b600019600386901b1c1916600185901b1785556108b3565b600085815260208120601f198616915b8281101561094d5788860151825594840194600190910190840161092e565b508582101561096b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6080815260006109a4608083018761075b565b6001600160a01b03861660208401526040830185905282810360608401526109cc818561075b565b979650505050505050565b6060815260006109ea606083018661075b565b6001600160a01b03851660208401528281036040840152610a0b818561075b565b969550505050505056fe4163636f756e74202573207075626c6973686564206974656d2025643a2027257327a264697066735822122015025348b2070e170e07b005bee318202c0997e07c9b4a7af027615656f8950964736f6c634300081300335075626c697368657220636f6e747261637420686173206265656e20636f6e737472756374656421608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561104a806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637262561c1161005b5780637262561c146100e85780637358152a146100fb5780638b46a2b41461010e5780638da5cb5b1461012157600080fd5b80630472f4181461008d57806313af4035146100ab5780633b47a9ac146100c057806341a7726a146100d5575b600080fd5b61009561013c565b6040516100a29190610c87565b60405180910390f35b6100be6100b9366004610d2e565b6101f5565b005b6100c861024a565b6040516100a29190610d50565b6100be6100e3366004610d2e565b6102b6565b6100be6100f6366004610d2e565b610478565b6100be610109366004610da8565b610660565b6100be61011c366004610dd2565b61090b565b6000546040516001600160a01b0390911681526020016100a2565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156101ec576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600180820154948401949094526002810154929390929184019160ff16908111156101be576101be610c71565b60018111156101cf576101cf610c71565b815260200160038201548152505081526020019060010190610160565b50505050905090565b6000546001600160a01b031633146102285760405162461bcd60e51b815260040161021f90610e16565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156101ec576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161026e565b6000546001600160a01b031633146102e05760405162461bcd60e51b815260040161021f90610e16565b604080518082019091526001600160a01b0382168152426020820152600061030783610baa565b6001600160a01b0381166000908152600260205260409020549091508015610385578260016103368184610e5e565b8154811061034657610346610e7f565b600091825260209182902083516002929092020180546001600160a01b0319166001600160a01b0390921691909117815591015160019091015561041b565b50600180548082018255600082815284517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600293840290810180546001600160a01b0319166001600160a01b039384161790556020808801517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790920191909155935490851682529190925260409091208190555b61043e604051806060016040528060308152602001610f5b603091393386610bb4565b6040516001600160a01b038516907f6ff6eaed699c246ce4a81c625294e51377e7c325c1c73e5bfa3b44be72806d0290600090a250505050565b6000546001600160a01b031633146104a25760405162461bcd60e51b815260040161021f90610e16565b60006104ad82610baa565b6001600160a01b0381166000908152600260205260408120549192508190036104d557505050565b6001600160a01b0382166000908152600260205260408120556001805411156105c757600180546000919061050b908290610e5e565b8154811061051b5761051b610e7f565b600091825260208083206040805180820190915260029093020180546001600160a01b03168084526001909101549183019190915290925061055c90610baa565b905081600161056b8186610e5e565b8154811061057b5761057b610e7f565b600091825260208083208451600293840290910180546001600160a01b0319166001600160a01b0392831617815594820151600190950194909455939092168152915260409020829055505b60018054806105d8576105d8610e95565b6000828152602080822060026000199094019384020180546001600160a01b03191681556001019190915591556040805160608101909152603080825261062792610fe5908301393385610bb4565b6040516001600160a01b038416907fd4da1c95251a1c543838518bae8531facb525bc74cf1ac0ed8fb308479958c2e90600090a2505050565b6000546001600160a01b0316331461068a5760405162461bcd60e51b815260040161021f90610e16565b6000601083901b62010000600160b01b031682176001600160a01b0381166000908152600460205260408120549192508190036106c75750505050565b6001600160a01b0382166000908152600460205260408120556003546001101561084e5760038054600091906106ff90600190610e5e565b8154811061070f5761070f610e7f565b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600180820154948401949094526002810154929390929184019160ff169081111561076657610766610c71565b600181111561077757610777610c71565b815260039182015460209182015282519083015192935060101b62010000600160b01b03169091179082906107ad600186610e5e565b815481106107bd576107bd610e7f565b600091825260209182902083516004929092020180546001600160a01b0319166001600160a01b039092169190911781559082015160018083019190915560408301516002830180549192909160ff191690838181111561082057610820610c71565b0217905550606091909101516003909101556001600160a01b03166000908152600460205260409020829055505b600380548061085f5761085f610e95565b6000828152602080822060046000199094019384020180546001600160a01b03191681556001810183905560028101805460ff191690556003019190915591556040805160608101909152602d8082526108c292610fb890830139338686610c00565b836001600160a01b03167f8f22061a7389d6620c735385174537c8baaf1439735a4a569906d00f95c04581846040516108fd91815260200190565b60405180910390a250505050565b6000546001600160a01b031633146109355760405162461bcd60e51b815260040161021f90610e16565b60006040518060800160405280856001600160a01b0316815260200184815260200183600181111561096957610969610c71565b81524260209091015290506000601085901b62010000600160b01b031684176001600160a01b0381166000908152600460205260409020549091508015610a42578260036109b8600184610e5e565b815481106109c8576109c8610e7f565b600091825260209182902083516004929092020180546001600160a01b0319166001600160a01b039092169190911781559082015160018083019190915560408301516002830180549192909160ff1916908381811115610a2b57610a2b610c71565b021790555060608201518160030155905050610b3b565b6003805460018181018355600092909252845160049091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b039093166001600160a01b031990931692909217825560208601517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c82015560408601517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d9091018054879460ff19909116908381811115610b0a57610b0a610c71565b021790555060609190910151600391820155546001600160a01b038316600090815260046020526040902081905590505b610b5f6040518060600160405280602d8152602001610f8b602d9139338888610c00565b856001600160a01b03167f66ddc840fe0c0e2d79e178ffe79c6ede8c6fcf1c61cf1edb4adb1d1e40ee327886604051610b9a91815260200190565b60405180910390a2505050505050565b6000815b92915050565b610bfb838383604051602401610bcc93929190610ef1565b60408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b179052610c4f565b505050565b610c4984848484604051602401610c1a9493929190610f24565b60408051601f198184030181529190526020810180516001600160e01b0316638ef3f39960e01b179052610c4f565b50505050565b80516a636f6e736f6c652e6c6f6790602083016000808383865afa5050505050565b634e487b7160e01b600052602160045260246000fd5b60208082528251828201819052600091906040908185019086840185805b83811015610d0457825180516001600160a01b0316865287810151888701528681015160028110610ce457634e487b7160e01b84526021600452602484fd5b868801526060908101519086015260809094019391860191600101610ca5565b509298975050505050505050565b80356001600160a01b0381168114610d2957600080fd5b919050565b600060208284031215610d4057600080fd5b610d4982610d12565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610d9b57815180516001600160a01b03168552860151868501529284019290850190600101610d6d565b5091979650505050505050565b60008060408385031215610dbb57600080fd5b610dc483610d12565b946020939093013593505050565b600080600060608486031215610de757600080fd5b610df084610d12565b925060208401359150604084013560028110610e0b57600080fd5b809150509250925092565b60208082526028908201527f43616c6c6572206f66207468652066756e6374696f6e206973206e6f7420746860408201526765206f776e65722160c01b606082015260800190565b81810381811115610bae57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000815180845260005b81811015610ed157602081850181015186830182015201610eb5565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610f046060830186610eab565b6001600160a01b0394851660208401529290931660409091015292915050565b608081526000610f376080830187610eab565b6001600160a01b039586166020840152939094166040820152606001529291505056fe4163636f756e74202573206372656174656420737562736372697074696f6e206f6e207075626c69736865722025732e4163636f756e742025732063726561746564207265616374696f6e206f6e20707562206974656d2025732f25644163636f756e742025732072656d6f766564207265616374696f6e206f6e20707562206974656d2025732f25644163636f756e742025732072656d6f76656420737562736372697074696f6e206f6e207075626c69736865722025732ea2646970667358221220f653a3f6306444d45301105417326b7702fe13fe4fc4a37c672bb68055b81dc864736f6c634300081300334163636f756e742025732063726561746564207375627363726962657220636f6e74726163742025732e4163636f756e742025732063726561746564207075626c697368657220636f6e74726163742025732e4163636f756e7420257320686173207375627363726962657220636f6e74726163742025732e4163636f756e7420257320686173207075626c697368657220636f6e74726163742025732ea26469706673582212204b1fc1ad2d018786216b0481277a1c689db1c99f5028bd695277b14101f4ed2964736f6c63430008130033526567697374727920636f6e747261637420686173206265656e20636f6e737472756374656421";

    public static final String FUNC_GETPUBLISHERCONTRACT = "getPublisherContract";

    public static final String FUNC_GETSUBSCRIBERCONTRACT = "getSubscriberContract";

    public static final String FUNC_GETSUBSCRIBERCONTRACTBYADDRESS = "getSubscriberContractByAddress";

    public static final String FUNC_PUBLISHERCONTRACTS = "publisherContracts";

    public static final String FUNC_SETUPPUBLISHER = "setupPublisher";

    public static final String FUNC_SETUPSUBSCRIBER = "setupSubscriber";

    public static final String FUNC_SUBSCRIBERCONTRACTS = "subscriberContracts";

    @Deprecated
    protected FeedRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected FeedRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected FeedRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected FeedRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<String> getPublisherContract() {
        final Function function = new Function(FUNC_GETPUBLISHERCONTRACT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getSubscriberContract() {
        final Function function = new Function(FUNC_GETSUBSCRIBERCONTRACT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getSubscriberContractByAddress(String addr) {
        final Function function = new Function(FUNC_GETSUBSCRIBERCONTRACTBYADDRESS, 
                Arrays.<Type>asList(new Address(160, addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> publisherContracts(String param0) {
        final Function function = new Function(FUNC_PUBLISHERCONTRACTS, 
                Arrays.<Type>asList(new Address(160, param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setupPublisher(String feedUrl) {
        final Function function = new Function(
                FUNC_SETUPPUBLISHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(feedUrl)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setupSubscriber() {
        final Function function = new Function(
                FUNC_SETUPSUBSCRIBER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> subscriberContracts(String param0) {
        final Function function = new Function(FUNC_SUBSCRIBERCONTRACTS, 
                Arrays.<Type>asList(new Address(160, param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static FeedRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new FeedRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static FeedRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new FeedRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static FeedRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new FeedRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static FeedRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new FeedRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<FeedRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(FeedRegistry.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<FeedRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(FeedRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<FeedRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(FeedRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<FeedRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(FeedRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
